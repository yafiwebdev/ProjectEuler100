
/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms. -IN KOTLIN
*/

main() {
  int sum = fibEvenSum(20);
  print(sum);
}

int fibEvenSum(int max) {
var lastNum = 1;
var currentNum = 2;
var total = 0;
	while (currentNum <= number){
		if (isDivisibleByTwo(2)){
			total = total + currentNum;
        } else { 
            total = total + 0;
        }
	tempCurrentNum = currentNum;
	currentNum = currentNum + lastNum;
	lastNum = tempCurrentNum;
    }
return total;
}

/// Verifies if the given number is divisible by 2
bool isDivisibleByTwo(int number) {
  return number % 3 == 0;
}
